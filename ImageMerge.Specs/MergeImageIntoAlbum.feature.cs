// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ImageMerge.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MergeImageIntoAlbum")]
    public partial class MergeImageIntoAlbumFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MergeImageIntoAlbum.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MergeImageIntoAlbum", "\tIn order to identify what album my image belongs to\r\n\tAs a consumer of the servi" +
                    "ce\r\n\tI want to be shown what album the image is in", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Given Configurations Are SetUp", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Merge image into album")]
        public virtual void MergeImageIntoAlbum()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Merge image into album", ((string[])(null)));
#line 9
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "albumID",
                        "id",
                        "title",
                        "url",
                        "thumbnailUrl"});
            table1.AddRow(new string[] {
                        "32",
                        "1",
                        "TestTitle",
                        "http://placehold.it/600/92c952",
                        "http://placehold.it/150/92c952"});
#line 10
 testRunner.Given("I have the following image", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "id",
                        "title"});
            table2.AddRow(new string[] {
                        "1",
                        "32",
                        "TestTitle"});
#line 13
 testRunner.And("the following Album", ((string)(null)), table2, "And ");
#line 16
 testRunner.When("When I call the merge operation asking for 1 page and 1 results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserId",
                        "PhotoTitle",
                        "ThumbnailUrl",
                        "FullImageUrl",
                        "AlbumTitle",
                        "AlbumId",
                        "PhotoId"});
            table3.AddRow(new string[] {
                        "1",
                        "TestTitle",
                        "http://placehold.it/150/92c952",
                        "http://placehold.it/600/92c952",
                        "TestTitle",
                        "32",
                        "1"});
#line 17
 testRunner.Then("the result should be the following album:", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Merge Multiple image into album")]
        public virtual void MergeMultipleImageIntoAlbum()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Merge Multiple image into album", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "albumID",
                        "id",
                        "title",
                        "url",
                        "thumbnailUrl"});
            table4.AddRow(new string[] {
                        "32",
                        "1",
                        "TestTitle",
                        "http://placehold.it/600/92c952",
                        "http://placehold.it/150/92c952"});
            table4.AddRow(new string[] {
                        "32",
                        "2",
                        "TestTitle2",
                        "http://placehold.it/600/92c9522",
                        "http://placehold.it/150/92c9522"});
#line 23
 testRunner.Given("I have the following image", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "id",
                        "title"});
            table5.AddRow(new string[] {
                        "1",
                        "32",
                        "TestTitle"});
#line 27
 testRunner.And("the following Album", ((string)(null)), table5, "And ");
#line 30
 testRunner.When("When I call the merge operation asking for 1 page and 1 results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserId",
                        "PhotoTitle",
                        "ThumbnailUrl",
                        "FullImageUrl",
                        "AlbumTitle",
                        "AlbumId",
                        "PhotoId"});
            table6.AddRow(new string[] {
                        "1",
                        "TestTitle",
                        "http://placehold.it/150/92c952",
                        "http://placehold.it/600/92c952",
                        "TestTitle",
                        "32",
                        "1"});
            table6.AddRow(new string[] {
                        "1",
                        "TestTitle2",
                        "http://placehold.it/150/92c952",
                        "http://placehold.it/600/92c952",
                        "TestTitle",
                        "32",
                        "3"});
#line 31
 testRunner.Then("the result should be the following album:", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion


